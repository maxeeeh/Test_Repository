El procedimiento para modificar una linea base seria:

1. Crear una rama a partir del tag/linea base a modificar. Un tag es un objeto que apunta a un commit, basicamente estarias creando una rama a partir de un commit que guarda las diferencias entre los archivos que existian en el repositorio y los archivos involucrados en el commit, y las diferencias internas de los archivos del repositorio y los archivos involucrados en el commit. Basicamente la configuracion o estado en ese momento.
	git checkout -b nombre_nueva_rama nombre_tag
El checkout sirve para moverse entre las ramas, o moverse hacia un estado anterior del repositorio: podrias poner git checkout nombre_tag y te reproduce el entorno que habia cuando hiciste el commit.
La opcion [-b] le indica al checkout que cree una nueva rama. La opcion [nombre_tag] le dice que te cree una rama a partir de ese estado.
Al ejecutar eso, te crea la rama y te mueve hacia esa rama. Sino podrian hacer el camino mas largo que seria: 
	git branch nombre_nueva_rama nombre_tag
	git checkout nombre_nueva_rama

2. Hacer los cambios en los archivos. Se trabajaria como veniamos haciendo, una vez hecho los cambios hacemos git add... git commit...
El git push habria que discutirlo por que tranquilamente podes crear ramas LOCALES y no publicarlas en el repositorio REMOTO.
Si decidimos hacer publicas todas las ramas entonces se tendria que:
	git add --all
	git commit -m "titulo" -m "descripcion"
	git push -u origin nombre_nueva_rama
La opcion [-u] seria el abreviado de [--set-upstream] que lo que hace es asociar la rama LOCAL con la que esta REMOTAMENTE [origin]. Esto simplemente te va crear automaticamente la rama en el repositorio REMOTO que seria el [origin]. Despues para los futuros push no van a necesitar poner siempre git push -u orig... por que ya queda guardado en el archivo de configuracion del repositorio a donde apunta tu rama local.

3.Plasmar los cambios en la rama principal. Tienen que hacer un merge entre la rama master y la rama donde se hicieron los cambios.
Primero tienen que estar en la rama master para poder hacer el merge. El merge lo que hace el incorporar los commits de una rama que le indicas, en la rama sobre la que estas parado.
	git checkout master
	git merge --no-ff -m "descripcion del merge" nombre_rama
La opcion [--no-ff] obliga a que se cree un objeto commit y sumado al [-m "msj"] indicas el titulo que va tener el merge. Si se usara simplemente git merge nombre_rama (si tratan de poner -m les va salir que es ignorado por el modo de merging) lo que haria el git es plasmar los commits de la rama en el master. Usando la opcion [--no-f] obligas a que te cree un objeto commit que la unica razon que tiene de existir es para indicar que hubo un merge y tener registro de ese merge. Me parece muy util esto para saber cuando se hizo el merge.
Otra cosa, si ponen el [--no-ff] pero no ponen el [-m "msg"] les va abrir el editor de texto VIM de Unix pidiendo que escriban el mensaje. Es una paja ese editor, se maneja mediante comandos por teclas.

4.